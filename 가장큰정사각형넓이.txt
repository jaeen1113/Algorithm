DP로 현재 위치를 오른쪽 아래로 했을 때, 만들수 있는 가장 큰 정사각형 넓이를 table에 업데이트


#include<iostream>
#include<vector>
#include<utility>
#include<algorithm>

using namespace std;
int dp[1001][1001] = {0};

int solution(vector<vector<int>> board)
{
    int ans = 0;
    int row = board.size();
    int col = board[0].size();
    for (int i = 1; i <= row; ++i)
    {
        for (int j = 1; j <= col; ++j)
        {
            if(board[i-1][j-1] != 0 )
            {
                dp[i][j] = min(dp[i][j-1], min(dp[i-1][j], dp[i-1][j-1])) + 1;
                ans = max(ans, dp[i][j]);
            }
        }
    }
    return ans*ans;
}
int main()
{

	vector<vector<char>> board{
		{ '0','1','1','1','0' },
		{ '0','1','1','1','1' },
		{ '0','1','0','1','1' },
		{ '0','0','1','1','1' },
		{ '0','0','0','0','0' } };

	//아래는 테스트 출력을 위한 코드입니다.
	cout << solution(board)<<endl;
}
