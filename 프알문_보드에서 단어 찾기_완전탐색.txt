#include <iostream>
#include <cstring>
#include <vector>
#include <math.h>

#pragma warning(disable:4996)
using namespace std;
char board[5][5] = {
{ 'U','R','L','P','M' },
{ 'X','P','R','E','T' },
{ 'G','I','A','E','T' },
{ 'X','T','N','Z','Y' },
{ 'X','O','Q','R','S' } };

bool check_function(int x, int y, string word, int word_pointer) {

	int direct_x[8] = {-1, 0, 1, -1, 1, -1, 0, 1};
	int direct_y[8] = {-1, -1, -1, 0, 0, 1, 1, 1};

	if (x < 0 || x > 5 || y < 0 || y > 5) return false;	// out of range
	if (word.length() == 1) return true;				// 시작 글자가 동일하고 word 크기가 1일때 


	word_pointer++;
	if (word_pointer == word.length() && word[word.length()-1] == word[word_pointer-1]) return true;// 마지막 글자 체크이고 그 글자가 맞으면 


	int current_x = x;
	int current_y = y;
	char around_eight[8] = {board[current_y -1][current_x -1], board[current_y - 1][current_x], board[current_y - 1][current_x +1],
							board[current_y ][current_x - 1],									   board[current_y][current_x+1],
							board[current_y+1][current_x -1], board[current_y+1][current_x], board[current_y+1][current_x +1] };

	for (int j = 0; j < 8; j++) {
		if (around_eight[j] == word[word_pointer]) {
			current_x = x + direct_x[j];
			current_y = y + direct_y[j];

			if (check_function(current_x, current_y, word, word_pointer)) return true;
		}
	}

	return false;


}

int main() {
	
	string list[3] = { "PRETTY","GIRL","REPEAT" };
	int x, y;

	int count = 0;

	for (int i = 0; i < 3; i++) {
		cout << "시작 위치 지정 (0<= x,y < 5)" << endl;
		cin >> y;
		cin >> x;
		if (check_function(x, y,list[i], 0))
			cout << i << "번째 문자열을 찾았습니다. " << endl;
	}

	
	
}