#include<iostream>
#include<string>
#include<vector>
using namespace std;
int n;
int op[30];
int ans = 0;
void dfs(int k, int sum, vector<int> &p)
{
    if (k == n)
    {
        int goal = (1 << 26) - 1;
 
 
        if (sum == goal)
        {
            ans++;
        }
 
        return;
    }
 
    dfs(k + 1,sum | p[k], p);
    dfs(k + 1,sum, p);
 
 
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    cin >> n;
    vector<string> v(n);
    vector<int> p(n);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
        for (int j = 0; j < v[i].size(); j++)
        {
            p[i] |= (1 << (v[i][j] - 'a'));
        }
    }
 
    dfs(0,0,p);
 
    cout << ans << endl;
 
    return 0;
}
