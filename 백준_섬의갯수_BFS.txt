#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
#include <queue>
#pragma warning(disable:4996)
using namespace std;

int island[50][50];

int ax[8] = {-1, 0, 1, -1, 1, -1, 0, 1};
int ay[8] = {-1,-1,-1,  0, 0,  1, 1, 1 };
int n, m;
queue<int> q;

void bfs() {
	
	while (!q.empty()) {
		int y = q.front();
		q.pop();
		int x = q.front();
		q.pop();

		for (int i = 0; i < 8; i++) {
			int ny = y + ay[i];
			int nx = x + ax[i];

			if (ny >= 0 && nx >= 0 && ny < n && nx < m && island[ny][nx] == 1) // 지도 안에 있고 이동 가능한 육지가 있을 경우
			{
				island[ny][nx] = 0;
				q.push(ny);
				q.push(nx);
			}
		}
	}
	
}
int main() {

	//freopen("sample_input.txt", "r", stdin);

	

	while (1) {
		cin >> m >> n;

		if (n == 0 || m == 0)
			break;

		memset(island, 0, sizeof(island));
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				cin >> island[i][j];
			}
		}

		int ret = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (island[i][j] == 1) {
					island[i][j] = 0;
					q.push(i);
					q.push(j);
					ret++;
					bfs();
				}
			}
		}
		cout << ret << endl;
		
	}
}