#include <iostream>
#include <cstring>
#include <algorithm>
#pragma warning(disable:4996)

using namespace std;

int map[40][40];
int n, m, h;


bool check() {
	for (int i = 1; i <= n; i++) { // start line
		int current = i;
		for (int j = 1; j <= h; j++) {
			if (map[j][current] != 0)
				current = map[j][current];
		}

		if (current != i) // 만약 시작한 라인과 마지막의 결과가 같지 않으면 false 반환
			return false;
	}
	return true;
}




int min2(int a, int b)
{
	return a < b ? a : b;
}

int add_ladder(int added, int y, int x) {
	if (check())
		return added;

	if (added > m) {
		return -1;
	}

	int ret = 999;

	for (int i = y, j; i <= h; i++) {
		if (i == y)
			j = x;
		else
			j = 1;
		for (; j < n; j++) {
			if (j == 1 && map[i][j] == 0 && map[i][j + 1] == 0 && map[i][j + 2] != j + 1) {
				map[i][j] = j + 1;
				map[i][j + 1] = j;
				int temp = add_ladder(added + 1, i, j+1);

				if (ret != -1 && temp != -1)
				{
					ret = ret < temp ? ret : temp;
				}
				else if (ret == -1 && temp != -1)
				{
					ret = temp;
				}
				else;

				map[i][j] = 0;
				map[i][j + 1] = 0;
			}

			else if (map[i][j] == 0 && map[i][j - 1] != j && map[i][j + 1] == 0 && map[i][j + 2] != j + 1) {
				map[i][j] = j + 1;
				map[i][j + 1] = j;
				int temp = add_ladder(added + 1, i, j+1);

				if (ret != -1 && temp != -1)
				{
					ret = ret < temp ? ret : temp;
				}
				else if (ret == -1 && temp != -1)
				{
					ret = temp;
				}
				else;

				map[i][j] = 0;
				map[i][j + 1] = 0;
			}
			else;
		}
	}
	if (ret == 999 || ret > 3)
		ret = -1;

	return ret;
}

int main() {
	freopen("input.txt", "r", stdin);
	cin >> n >> m >> h;

	memset(map, 0, sizeof(map));
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		map[a][b] = b+1;
		map[a][b + 1] = b;
	}

	cout << add_ladder(0, 1, 1);


}