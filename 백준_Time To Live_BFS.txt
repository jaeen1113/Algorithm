#include <iostream>
#include <queue>
#include <cstring>
#pragma warning(disable:4996)
using namespace std;
int n;
vector<int> router[100001];
queue <int> q;
int check[100001];
int min2(int a, int b) {
	return a < b ? a : b;
}
int getTTL() {
	int ret = 0;
	for (int i = 0; i < n; i++)
		ret = ret > check[i] ? ret : check[i];
	return ret;
}
void bfs(int start) {
	while (!q.empty()) {
		int temp = q.front();
		q.pop();

		for (int i = 0; i < router[temp].size(); i++) {
			int next = router[temp][i];
			if (check[next] != 0 || next == start) continue; // 시작지점이나, 이전에 방문한 지점은 이미 더 작은 값을 가지게 됨

			q.push(next);
			check[next] = check[temp] + 1;
		}
	}
}
int main() {
	freopen("sample_input.txt", "r", stdin);
	int t; 
	cin >> t;
	while (t--) {
		cin >> n;
		
		for (int i = 0; i < n - 1; i++)
		{
			int a, b;
			cin >> a >> b;
			router[a].push_back(b);
			router[b].push_back(a);
		}

		int mini = 9999999;
		
		for (int i = 0; i < n; i++) {
			memset(check, 0, sizeof(check));
			q.push(i);
			bfs(i);
			int maxttl = getTTL();
			mini = mini < maxttl ? mini : maxttl;
		}
		cout << mini<<endl;
		for (int i = 0; i < n; i++)
			router[i].clear();
	}
}