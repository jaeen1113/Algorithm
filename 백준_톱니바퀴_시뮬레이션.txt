#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <queue>
#pragma warning(disable:4996)



using namespace std;

queue<int> q;
int wheel[4][8];

int score() {
	int ret = 0;
	if (wheel[0][0])
		ret += 1;
	if (wheel[1][0])
		ret += 2;
	if (wheel[2][0])
		ret += 4;
	if (wheel[3][0])
		ret += 8;
	return ret; 

}

void turning(int wn, int turn_dir) {
	if (turn_dir == 0)
		return;

	if (turn_dir == 1) { // 시계방향 돌리기
		int t = wheel[wn][7];
		for (int i = 7; i > 0; i--)
			wheel[wn][i] = wheel[wn][i - 1];
		wheel[wn][0] = t;
	}
	else {
		int t = wheel[wn][0];
		for (int i = 0; i < 7; i++)
			wheel[wn][i] = wheel[wn][i + 1];
		wheel[wn][7] = t;
	}
}
void solve(int wn, int dir) {
	int dir1, dir2, dir3, dir4;
	if (wn == 1)
	{
		dir2 = wheel[0][2] != wheel[1][6] ? dir * (-1) : 0;
		dir3 = wheel[1][2] != wheel[2][6] ? dir2 * (-1) : 0;
		dir4 = wheel[2][2] != wheel[3][6] ? dir3 * (-1) : 0;

		turning(0, dir);
		turning(1, dir2);
		turning(2, dir3);
		turning(3, dir4);
	}
	if (wn == 2)
	{
		dir1 = wheel[0][2] != wheel[1][6] ? dir * (-1) : 0;
		dir3 = wheel[1][2] != wheel[2][6] ? dir * (-1) : 0;
		dir4 = wheel[2][2] != wheel[3][6] ? dir3 * (-1) : 0;

		turning(0, dir1);
		turning(1, dir);
		turning(2, dir3);
		turning(3, dir4);
	}
	if (wn == 3)
	{
		dir4 = wheel[2][2] != wheel[3][6] ? dir * (-1) : 0;
		dir2 = wheel[1][2] != wheel[2][6] ? dir * (-1) : 0;
		dir1 = wheel[0][2] != wheel[1][6] ? dir2 * (-1) : 0;
		

		turning(3, dir4);
		turning(1, dir2);
		turning(2, dir);
		turning(0, dir1);

	}
	if (wn == 4) {
		dir3 = wheel[2][2] != wheel[3][6] ? dir * (-1) : 0;
		dir2 = wheel[1][2] != wheel[2][6] ? dir3 * (-1) : 0;
		dir1 = wheel[0][2] != wheel[1][6] ? dir2 * (-1) : 0;

		turning(3, dir);
		turning(2, dir3);
		turning(1, dir2);
		turning(0, dir1);
	}
}


int main() {
	freopen("input.txt", "r", stdin);
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 8; j++)
			scanf("%1d", &wheel[i][j]);
	}
	int t;
	cin >> t;

	for (int i = 0; i < t; i++)
	{
		int w, d;
		cin >> w >> d;

		solve(w, d);

	}
	cout << score();
}