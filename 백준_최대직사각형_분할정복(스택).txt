#include <iostream>
#include <queue>
#include <vector>
#include <cstring>
#include <algorithm>
#include <bitset>
#include <cmath>
#include <stack>
#pragma warning(disable:4996)
using namespace std;
int arr[100001];
stack< pair<int, int> > s;
int find_smallest(int st, int end) {
	int ret = 1000000001;
	int ret2 = 0;
	for (int i = st; i <= end; i++) {
		if (ret > arr[i])
		{
			ret = arr[i];
			ret2 = i;
		}
	}
	return ret2;
}

int solve() {
	int ret = 0;
	while (!s.empty()) {
		pair<int, int> temp = s.top();
		s.pop();
		int st = temp.first, end = temp.second;

		int smallest = find_smallest(st, end);

		ret = max(ret, arr[smallest] * (end - st + 1));

		int left_side = smallest - 1, right_side = smallest + 1;

		if (left_side > st)
			s.push(pair<int, int>(st, left_side));

		if (right_side < end) 
			s.push(pair<int, int>(right_side, end));
	}

	return ret;
}

int main() {
	freopen("sample_input.txt", "r", stdin);

	while (1) {
		int size;

		cin >> size;
		if (!size) return 0;

		for (int i = 0; i < size; i++)
			cin >> arr[i];
		s.push(pair<int, int>(0, size - 1));
		cout << solve() << endl;
	}



}