#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
using namespace std;
#define ull unsigned long long 
#define max 200002
#pragma warning(disable:4996)
int m, n;
int tomato[1000][1000];
int day[1000][1000];
queue <pair<int, int> > q;
int addx[4] = {1,-1, 0,  0};
int addy[4] = {0, 0, 1, -1};

void bfs() {

	while (!q.empty()) {
		pair<int, int> temp = q.front();
		q.pop();

		for (int i = 0; i < 4; i++) {
			int next_y = temp.first + addy[i];
			int next_x = temp.second + addx[i];
			if (next_x >= 0 && next_x < m && next_y >= 0 && next_y < n&& tomato[next_y][next_x] == 0 && day[next_y][next_x] == 0) {
				day[next_y][next_x] = day[temp.first][temp.second] + 1;
				q.push(pair<int, int>(next_y, next_x));
			}
		}
	}

}
int main() {
	freopen("sample_input.txt", "r", stdin);
	cin >> m >> n;
	memset(day, 0, sizeof(day));

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
		{
			cin >> tomato[i][j];
			if (tomato[i][j] == 0)
				;

			else if (tomato[i][j] == 1)
			{
				q.push(pair<int, int>(i, j));
				day[i][j] = 1;
			}
			else
				day[i][j] = -1;
			
		}
	}

	bfs();
	int ret = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (day[i][j] == 0) {
				cout << -1;
				return 0;
			}
			ret = ret > day[i][j] ? ret : day[i][j];
		}
	}

	cout << ret-1;
	return 0;
}
