#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
#pragma warning(disable:4996)

using namespace std;

int called[101];
vector<int> call[101];
int s, start;
queue<int> q;


int solve() {
	q.push(start);
	called[start] = 1;
	
	while (!q.empty()) {

		
		int t = q.size();
		while (t--) {
			int current = q.front();
			q.pop();

			for (int i = 0; i < call[current].size(); i++) {
				if (called[call[current][i]] == -1) {
					called[call[current][i]] = called[current] + 1;
					q.push(call[current][i]);
				}
			}
		}
	}

	int max_one = 1;
	for (int i = 2; i < 101; i++)
		max_one = called[i] >= called[max_one] ? i : max_one;

	return max_one;
}
int main() {
	freopen("input.txt", "r", stdin);
	for (int t = 1; t <= 10; t++) {
		cin >> s >> start;
		memset(called, -1, sizeof(called));
		for (int i = 0; i < 101; i++)
			call[i].clear();

		for (int i = 0; i < s/2; i++)
		{
			int from, to;
			cin >> from >> to;
			call[from].push_back(to);
		}

		cout << "#" << t << " " << solve() << endl;;
	}
}
