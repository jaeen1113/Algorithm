#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#pragma warning(disable:4996)
using namespace std;
int cache[10000];
string N;
// 수열에서 a~b구간의 난이도를 반환함.
int classify(int a, int b) {
	string M = N.substr(a, b-a +1);

	// 1. 부분수열 M이 첫번째 숫자로만 이루어진 (11111처럼) 경우 난이도 1
	if (M == string(M.size(), M[0])) return 1;

	bool samesub = true;
	// 등차수열인지 확인
	for (int i = 1; i < M.size(); i++)
		if (M[i] - M[i - 1] != M[1] - M[0]) samesub = false;

	// 등차수열이고 공차가 1 또는 -1인 경우
	if (samesub && abs(M[1] - M[0]) == 1) return 2;
	if (samesub && abs(M[1] - M[0]) != 1) return 5;

	// 두 수가 반복되는지 확인(454545 같이)
	bool repeatable = true;
	for (int i = 1; i < M.size(); i++)
		if (M[i] != M[i % 2]) repeatable = false;

	// 두 수가 반복되는 경우
	if (repeatable) return 4;
	return 10;

}

// 여기가 재귀적으로 들어가는 외우기 함수
// 수열에서 classify될 시작값을 받음.
int memorize(int begin) {

	//기저사례(체크할 수열의 길이가 1인 경우는 점수가 없으므로 0점 반환)
	if (begin == N.size()) return 0;

	int& ret = cache[begin];
	if (ret != -1) return ret;

	ret = 9876543;

	for (int i = 3; i <= 5; i++) // 확인할 수열 길이는 3~5
		if (begin + i <= N.size()) // 현 위치에서 수열의 길이만큼 구간에서 난이도 classify한 것 + 현위치+1부터 길이만큼 classify한것 
			ret = min(ret, classify(begin, begin + i - 1)+ memorize(begin + i));
	
	

	return ret;
}

int main() {
	memset(cache, -1, sizeof(cache));
	getline(cin, N);
	cout << memorize(0);
}